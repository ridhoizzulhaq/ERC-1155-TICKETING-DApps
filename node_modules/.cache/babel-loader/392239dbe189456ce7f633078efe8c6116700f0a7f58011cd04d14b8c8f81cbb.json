{"ast":null,"code":"var _jsxFileName = \"/Users/ridhoizzulhaq/tiket-dapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [isOwner, setIsOwner] = useState(false);\n  const contractAddress = \"0x4cac8e7293b67dcd7ce70882ddb536649114c177cc408c544399cd36de3f0a8e\"; // Ganti dengan alamat kontrak Tiket yang valid\n\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData();\n  }, []);\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      setWeb3(window.web3);\n    }\n    // Handle case where user doesn't have Metamask installed\n    else {\n      window.alert(\"Non-Ethereum browser detected. Please install MetaMask extension.\");\n    }\n  };\n  const loadBlockchainData = async () => {\n    if (web3) {\n      try {\n        const accounts = await web3.eth.getAccounts();\n        setAccount(accounts[0]);\n        const contractInstance = new web3.eth.Contract(\n        // Ganti dengan ABI kontrak Tiket\n        [{\n          \"constant\": true,\n          \"inputs\": [{\n            \"name\": \"tokenId\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"balanceOf\",\n          \"outputs\": [{\n            \"name\": \"\",\n            \"type\": \"uint256\"\n          }],\n          \"payable\": false,\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }], contractAddress);\n        setContract(contractInstance);\n      } catch (error) {\n        console.log(error);\n        window.alert(\"Failed to load blockchain data.\");\n      }\n    }\n  };\n  const validateOwnership = async () => {\n    if (contract && account) {\n      try {\n        const balance = await contract.methods.balanceOf(account, 1).call();\n        setIsOwner(balance > 0);\n      } catch (error) {\n        console.log(error);\n        window.alert(\"Failed to validate ownership.\");\n      }\n    }\n  };\n  useEffect(() => {\n    validateOwnership();\n  }, [contract, account]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isOwner ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Anda berhak masuk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Gagal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ELiko10jblghZjStaXhZGDbLg3U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","jsxDEV","_jsxDEV","App","_s","web3","setWeb3","contract","setContract","account","setAccount","isOwner","setIsOwner","contractAddress","loadWeb3","loadBlockchainData","window","ethereum","enable","alert","accounts","eth","getAccounts","contractInstance","Contract","error","console","log","validateOwnership","balance","methods","balanceOf","call","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ridhoizzulhaq/tiket-dapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\n\nfunction App() {\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [isOwner, setIsOwner] = useState(false);\n\n  const contractAddress = \"0x4cac8e7293b67dcd7ce70882ddb536649114c177cc408c544399cd36de3f0a8e\"; // Ganti dengan alamat kontrak Tiket yang valid\n\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData();\n  }, []);\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      setWeb3(window.web3);\n    }\n    // Handle case where user doesn't have Metamask installed\n    else {\n      window.alert(\n        \"Non-Ethereum browser detected. Please install MetaMask extension.\"\n      );\n    }\n  };\n\n  const loadBlockchainData = async () => {\n    if (web3) {\n      try {\n        const accounts = await web3.eth.getAccounts();\n        setAccount(accounts[0]);\n\n        const contractInstance = new web3.eth.Contract(\n          // Ganti dengan ABI kontrak Tiket\n          [\n            {\n              \"constant\": true,\n              \"inputs\": [{ \"name\": \"tokenId\", \"type\": \"uint256\" }],\n              \"name\": \"balanceOf\",\n              \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }],\n              \"payable\": false,\n              \"stateMutability\": \"view\",\n              \"type\": \"function\"\n            }\n          ],\n          contractAddress\n        );\n        setContract(contractInstance);\n      } catch (error) {\n        console.log(error);\n        window.alert(\"Failed to load blockchain data.\");\n      }\n    }\n  };\n\n  const validateOwnership = async () => {\n    if (contract && account) {\n      try {\n        const balance = await contract.methods.balanceOf(account, 1).call();\n        setIsOwner(balance > 0);\n      } catch (error) {\n        console.log(error);\n        window.alert(\"Failed to validate ownership.\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    validateOwnership();\n  }, [contract, account]);\n\n  return (\n    <div>\n      {isOwner ? <p>Anda berhak masuk</p> : <p>Gagal</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}